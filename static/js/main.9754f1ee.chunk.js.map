{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortType","NONE","isReversed","reorderOptions","setReorderOptions","handleChangeSortType","type","reverse","unSorted","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","className","cn","onClick","undefined","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAgB,WAC3B,MAA4CC,mBAAS,CACnDC,SAAUJ,EAASK,KACnBC,YAAY,IAFd,mBAAOC,EAAP,KAAuBC,EAAvB,KAKA,SAASC,IAGN,IAFDC,EAEA,uDAFiBH,EAAeH,SAChCO,EACA,uDADUJ,EAAeD,WAEzBE,EAAkB,CAChBJ,SAAUM,EACVJ,WAAYK,IAIhB,IAAMC,GAAYL,EAAeD,YAC5BC,EAAeH,WAAaJ,EAASK,KAEpCQ,EA9CD,SACLA,EADK,GAGJ,IADCT,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNQ,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQb,GACN,KAAKJ,EAASkB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKjB,EAASoB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITf,GACFQ,EAAaH,UAGRG,EAsBOQ,CAAkBrB,EAAiBM,GAEjD,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEb,KAAK,SACLa,UAAWC,IAAG,iBAAkB,CAC9B,WAAYjB,EAAeH,WAAaJ,EAASkB,WAEnDO,QAAS,kBAAMhB,EAAqBT,EAASkB,WAL/C,iCAUA,wBACER,KAAK,SACLa,UAAWC,IAAG,oBAAqB,CACjC,WAAYjB,EAAeH,WAAaJ,EAASoB,SAEnDK,QAAS,kBAAMhB,EAAqBT,EAASoB,SAL/C,4BAUA,wBACEV,KAAK,SACLa,UAAWC,IAAG,oBAAqB,CACjC,YAA0C,IAA9BjB,EAAeD,aAE7BmB,QAAS,kBACPhB,OAAqBiB,GAAYnB,EAAeD,aANpD,sBAaGM,GACC,wBACEF,KAAK,SACLa,UAAU,4BACVE,QAAS,kBAAMhB,EAAqBT,EAASK,MAAM,IAHrD,sBAWN,6BAEIQ,EAAMc,KAAI,SAAAC,GAAI,OACZ,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YC/HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9754f1ee.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\n\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [reorderOptions, setReorderOptions] = useState({\n    sortType: SortType.NONE,\n    isReversed: false,\n  });\n\n  function handleChangeSortType(\n    type: SortType = reorderOptions.sortType,\n    reverse = reorderOptions.isReversed,\n  ) {\n    setReorderOptions({\n      sortType: type,\n      isReversed: reverse,\n    });\n  }\n\n  const unSorted = !reorderOptions.isReversed\n    && reorderOptions.sortType === SortType.NONE;\n\n  const goods = getReorderedGoods(goodsFromServer, reorderOptions);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': reorderOptions.sortType !== SortType.ALPHABET,\n          })}\n          onClick={() => handleChangeSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': reorderOptions.sortType !== SortType.LENGTH,\n          })}\n          onClick={() => handleChangeSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': reorderOptions.isReversed === false,\n          })}\n          onClick={() => (\n            handleChangeSortType(undefined, !reorderOptions.isReversed)\n          )}\n        >\n          Reverse\n        </button>\n\n        {\n          !unSorted && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => handleChangeSortType(SortType.NONE, false)}\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {\n          goods.map(good => (\n            <li\n              key={good}\n              data-cy=\"Good\"\n            >\n              {good}\n            </li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}